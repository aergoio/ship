
ship.build.ConsoleServer.0=<red>{0}</red>
ship.build.ConsoleServer.1=<bg_green><black> SUCCESS </black></bg_green>      <green>{0}</green><bright_black>{1}</bright_black>
ship.build.ConsoleServer.2=<bg_red><black> ERROR! </black></bg_red>       {0}<bright_black>{1}</bright_black>
ship.build.ConsoleServer.3=<bg_red><black> TEST FAILURE! </black></bg_red>{0}<bright_black>{1}</bright_black>
ship.build.ConsoleServer.4=\ <bg_green> P </bg_green> <green>{0}</green>
ship.build.ConsoleServer.5=\ <bg_red> F </bg_red> <red>{0}</red>
ship.build.ConsoleServer.6=\    * {0}(<red>{1}</red> / {2})
ship.build.ConsoleServer.7=\    * {0}({1} / {2})
ship.build.ConsoleServer.8=\     -  {0} <bright_black>{1} ms</bright_black>
ship.build.ConsoleServer.9=\     - <bg_red> {0}</bg_red><red>- {1} </red>

ship.exception.PackageNotFoundException.0="Package {0} not found: {1}"
ship.exception.DirectoryNotEmptyException.0=<yellow>{0}</yellow> is not empty. You can reset project with <blue>-f</blue> but It make aergo.json overwritten!!

ship.exec.ShipLauncher.0=<red>No command!!</red>\n\
\tCommands: init, install, build, test, publish
ship.exec.ShipLauncher.1=<red>Invalid command: {0}</red>\n\
\tinit    - initialize a current working directory as a project\n\
\tinstall - install a package from github to local repository(~/.aergo_modules)\n\
\tbuild   - build a project\n\
\ttest    - run test suites\n\
\tpublish - package and apply a project to local repository
ship.exec.ShipLauncher.2=<bg_red> ERROR </bg_red> {0}
ship.exec.ShipLauncher.3=Unexpected exception!! Report the bug to support@aergo.io

ship.command.BuildProject.0=Successful to build.
ship.command.BuildProject.1=Target: <green>{0}</green>
ship.command.BuildProject.2=<red>Fail to build.</red>
ship.command.BuildProject.3=Cause: {0}
ship.command.BuildProject.4=No build target!!

ship.command.PublishPackage.0=No target!! add target field to aergo.json.
ship.command.PublishPackage.1=Successful to publish {0}.
ship.command.PublishPackage.2=Publish path: <green>{0}</green>


ship.command.TestProject.0=\ <green>o</green> {0}
ship.command.TestProject.1=\ <red>x</red> {0} - <red>{1}</red>
ship.command.TestProject.2=\ <red>x</red> {0}
ship.command.TestProject.3=\  <green>o</green> {0} ({1}/{2})
ship.command.TestProject.4=\  <red>x</red> {0} ({1}/{2})
ship.command.TestProject.5=\   <green>o</green> {0}
ship.command.TestProject.6=\   <red>x</red> {0} - <red>{1}</red>

ship.command.CreateProject.0=Congratulation!! {0} initialized.
ship.command.CreateProject.1=Edit <green>{0}</green> as your needs.
ship.command.CreateProject.2=Fail to prepare a file: {0}


ship.command.InstallPackage.0=Successful to install {0}.
ship.command.InstallPackage.1=Install path: <green>{0}</green>

ship.build.web.service.ContractService.0=Application Binary Interface not found for {0}

ship.build.web.service.component.DeployComponent.0=Fail to connect aergo[{0}]. Check your aergo node.
ship.build.web.service.component.DeployComponent.1=Fail to deploy contract

ship.test.LuaRunner.0=Failed to discover {0} script engine
